{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarde\\\\NEO-J\\\\frontend\\\\src\\\\components\\\\SearchExport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './SearchExport.css'; // Adicionando um arquivo CSS para os estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchExport = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  // Função para buscar os repositórios\n  const searchRepositories = async () => {\n    try {\n      const response = await axios.get(`https://api.github.com/users/${username}/repos`);\n      setRepositories(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar repositórios', error);\n    }\n  };\n\n  // Função para exportar os repositórios como CSV\n  const exportCSV = () => {\n    const csvRows = [];\n\n    // Cabeçalhos da tabela\n    const headers = ['Nome do Repositório', 'Estrelas', 'Usuário'];\n    csvRows.push(headers.join(','));\n\n    // Adiciona os dados dos repositórios\n    repositories.forEach(repo => {\n      const row = [repo.name, repo.stargazers_count, username];\n      csvRows.push(row.join(','));\n    });\n\n    // Cria o link para o arquivo CSV\n    const csvContent = csvRows.join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `${username}_repositories.csv`;\n    link.click();\n    alert('CSV exportado com sucesso!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-export\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pesquisar Reposit\\xF3rios do GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Digite o nome do usu\\xE1rio\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchRepositories,\n        className: \"search-button\",\n        children: \"Buscar Reposit\\xF3rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportCSV,\n        className: \"export-button\",\n        children: \"Exportar para CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories-container\",\n      children: repositories.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"repositories-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome do Reposit\\xF3rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Estrelas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Usu\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: repo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: repo.stargazers_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, repo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum reposit\\xF3rio encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchExport, \"gxUfTHMOcUWSyZoWH+GnAOIA66A=\");\n_c = SearchExport;\nexport default SearchExport;\nvar _c;\n$RefreshReg$(_c, \"SearchExport\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchExport","_s","username","setUsername","repositories","setRepositories","searchRepositories","response","get","data","error","console","exportCSV","csvRows","headers","push","join","forEach","repo","row","name","stargazers_count","csvContent","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","length","map","id","_c","$RefreshReg$"],"sources":["C:/Users/jarde/NEO-J/frontend/src/components/SearchExport.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './SearchExport.css';  // Adicionando um arquivo CSS para os estilos\n\nconst SearchExport: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [repositories, setRepositories] = useState<any[]>([]);\n\n  // Função para buscar os repositórios\n  const searchRepositories = async () => {\n    try {\n      const response = await axios.get(`https://api.github.com/users/${username}/repos`);\n      setRepositories(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar repositórios', error);\n    }\n  };\n\n  // Função para exportar os repositórios como CSV\n  const exportCSV = () => {\n    const csvRows: string[] = [];\n    \n    // Cabeçalhos da tabela\n    const headers = ['Nome do Repositório', 'Estrelas', 'Usuário'];\n    csvRows.push(headers.join(','));\n\n    // Adiciona os dados dos repositórios\n    repositories.forEach((repo) => {\n      const row = [repo.name, repo.stargazers_count, username];\n      csvRows.push(row.join(','));\n    });\n\n    // Cria o link para o arquivo CSV\n    const csvContent = csvRows.join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `${username}_repositories.csv`;\n    link.click();\n\n    alert('CSV exportado com sucesso!');\n  };\n\n  return (\n    <div className=\"search-export\">\n      <h2>Pesquisar Repositórios do GitHub</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Digite o nome do usuário\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        className=\"search-input\"\n      />\n      <div className=\"buttons-container\">\n        <button onClick={searchRepositories} className=\"search-button\">\n          Buscar Repositórios\n        </button>\n        <button onClick={exportCSV} className=\"export-button\">\n          Exportar para CSV\n        </button>\n      </div>\n\n      <div className=\"repositories-container\">\n        {repositories.length > 0 ? (\n          <table className=\"repositories-table\">\n            <thead>\n              <tr>\n                <th>Nome do Repositório</th>\n                <th>Estrelas</th>\n                <th>Usuário</th>\n              </tr>\n            </thead>\n            <tbody>\n              {repositories.map((repo) => (\n                <tr key={repo.id}>\n                  <td>{repo.name}</td>\n                  <td>{repo.stargazers_count}</td>\n                  <td>{username}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>Nenhum repositório encontrado.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchExport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}